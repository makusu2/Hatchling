Electrical system for town
Make trees show some sort of dust or whatever when hit with a hatchet
Bow and arrow combat
Could we maybe only have one "special" panel; like, since you'll never have townpanel, craftingpanel, chestpanel, or traderpanel open at the same time, we could combine them all...? Would it be worth it?
Think about what will make things easier when adding towns and shit; modularize stuff for fewest lines of code in high-level (specific NPC or whatever) scripts. 
	Especially for dialogue
Map and map markers (use navmeshagent to show player path to destination)
Scripts should be in your own language, bash-style; C# should allow the file to be attached and maybe run each file in fixedupdate
	Would the lines have to return void, though?
GetComponent<Renderer>().isVisible returns true if the object is in view of the camera
Use profiler window to find what's using processing power
So it looks like, we should have class variables before methods, rather than static method variables. This is a lot faster cuz of garbage collection.
Oxygen underwater system
Building snap system
Have hands always show in front of objects

Difficult to do now:
Dragon growth stages
Commission models
Human models
	Or maybe just make some cute equivalent?
Add guards to town






Growth:
    Stage 0:
        Egg
        Can't do SHIT
        Needs food preparation and fire to grow
            Maybe if you hatch it with fire but don't have food it DIES
    Stage 1:
        Newborn
        VERY cute
        Don't be afraid to stay on this step for a much longer time than the others
        Eats food to grow
    Stage 2:
        Toddler
        Should do something to help at this point; maybe keeps the fire lit or something
        During this step, have it disappear
            Have a trail into the woods or something to let the player know it's not a bug
            Goal of this is to make the user miss the hatchling
    Stage 3: Adult
        Some drama should happen at this stage; dunno what yet
        Maybe leaves every other day to go hunting, then comes back and spends the other day eating what it got at home?
            Or it's every third day, and on the third day it accompanies you on your travels
                Maybe in the future make it so that you decide whether it follows you
        Keeps the fire lit
        Accompanies you
        Very long stage
        This stage should have it helping you out a lot, allowing you to build a lot, including a little village around your home
    Stage 4: Middle aged
        Defense should go down quite a bit; therefore, when you're out exploring with the hatchling, it'll get hurt easily
    Stage 5: Elder
        Stays at home
        The children of the village should play with them
        Another long stage
    Stage 6: Dying
        Heavy breathing
        Clearly struggling

        
        
        
        
Old Dragon growth:
    Stage 0:
        Egg
        Can't do SHIT
        Needs food preparation and fire to grow
            Maybe if you hatch it with fire but don't have food it DIES
    Stage 1:
        Newborn
        At this point, it should be STRESSFUL keeping it alive; you shouldn't have enough resources to do other stuff like build
    Stage 2:
        Hatchling
        Don't be afraid to stay on this step for a much longer time than the others
    Stage 3:
        Toddler
        Needs fewer resources than before
        VERY cute
    Stage 4:
        Adolescent
        Should do something to help at this point; maybe keeps the fire lit or something
        During this step, have it disappear
            Have a trail into the woods or something to let the player know it's not a bug
            Goal of this is to make the user miss the hatchling
    Stage 5:
        Adolescent
        Returns larger than before
            Maybe have it look very skinny but muscular where there is muscle
        Maybe if you leave food in your "food bin" for too long, the hatchling eats it
            HOWEVER, the more food it eats from the food bin, it gets more muscle and less skinny
            This could also be the key to getting to the next stage
    Stage 6: Young Adult
        Muscular (not buff)
        Some drama should happen at this stage; dunno what yet
        Maybe leaves every other day to go hunting, then comes back and spends the other day eating what it got at home?
            Or it's every third day, and on the third day it accompanies you on your travels
                Maybe in the future make it so that you decide whether it follows you
        Abilities:
            Keeps the fire lit
            Accompanies you
    Stage 7: Adult
        A lot like young adult
        Very long stage
        This stage should have it helping you out a lot, allowing you to build a lot, including a little village around your home
    Stage 8: ??? Elder adult?
        A lot like adult
        Something should be different tho
    Stage 9: Middle aged
        Short stage; should let you know that something is changing
    Stage 10: Getting Old (change name)
        Defense should go down quite a bit; therefore, when you're out exploring with the hatchling, it'll get hurt easily
    Stage 11: Elder
        Stays at home
        The children of the village should play with them
        Another long stage
    Stage 12: Dying
        Heavy breathing
        Clearly struggling



End description:
    You start off on some cutscene. Something about waking up. Sun starts to rise.
    There are small resources nearby
    Okay, so let's have a map
    Maybe egg is hidden in a pile of stones?

Fix the held items hit twice issue (one on swing down one on swing up)
	Not worth it, also sorta fun

Completed:

Update governor model

Some system of giving resources to dragon
    What if the dragon just looks for food and other resources, so if you store stuff near the dragon they might eat it?

Decide on whether to have max items in inventory

Add scroll bar to menus that can run out of room

Alright, what if we have this guy who's like "Gimme stuff I wanna build a town" and then you can just "deposit" stuff and eventually houses will appear and stuff?
    Eventually he builds a trading post where people trade like 80 apples for 100 wood or whatever
    So, what's the best way of doing it? Should he say "I need 70 bricks" or whatever, or should you just deposit stuff? Or, should it be like the crafting system, where possible builds appear when you talk to them?
    
Use navmeshpath and calculatepath for pathfinding (stops from getting stuck)
Pause menu

OnWaterEnter and OnWaterExit functions
Fix fall damage; have it be logarithmic or whatever, where infinite height -> all fall damage, so if you fall a great (near inf) distance it'll ALMOST kill you (if you start at full health)
Fix UI issue
Armor slots
Also combine pickups on awake (or start)
    Actually, test for combine on discard function

Hunger and thirst system

Okay, so let's have a "Toolkit" item, and if you use it, it opens the building menu
    But this is not for houses or anything, just small walls that the user can make with what they choose; the other guy is for villages
    
Maybe each item should be a class; contains the inventory icon and 3d object and stuff like that
    So, GameItem should extend MonoBehavior, and have different methods; also probably add a few interfaces
    GameItems:
        Equipable
        Can be picked up
        Should have an inventory icon
        Should have a 3d model
        I'd have to instantiate a new one for each in the game, and probably destroy it if you unequip it...
        OH! What if I just set the equipped item model to CurrentlyEquippedItem, and on collision, have it send a "ItemCollideWith" to parent, which then looks at the actual item class to get information on what to do?

Enemies

Swimming mechanic
On unpause, lock cursor back to screen
	Only an issue with esc in editor
Fall damage

Building System

Crafting system

Inventory UI where you can click on stuff - maybe integrate with crafting system
    Okay, let's focus on what the game should have, not what's easiest to script
        Only really simple stuff should be in the mobile crafting panel, like tools; but isn't even that too much?

I think that instead of the inventory selection we currently have, it might be better to have a "current item" slot. But I'm conflicted about that.
    Nah, I like currently selected item. Maybe there should be a max number of slots like 5, and adding an item after 5 puts it in the full inventory panel

Maybe the "first" item in your inventory is "hands", and you can never lose those? Plus you can just press 1 to go to "default" item selection, making things easier
    No; I wanna do the left-click for hands thing

What if we do right-click to use the item, and left-click to use your hands?
    So, left-click sends a "GetClickedOn", but right-click activates the item. Even for something like a sword, it will initiate the sword swing, and the enemy only takes damage once the sword collides with their body.

Let's get rid of the player's "attack" and "defense", and have their damage just be the damage of whatever weapon they're using

Also, let's have only the hands and arms of player be visible, for simplicity and vive control

Should the enemies also use collision (with their swords or whatever) for damage to player? Will it be too processor intensive? Hmm...

Alright, graphic talk; fuckin, equipped items...
    Do I want to have the same hand position no matter the item?
        Left hand stays same, right hand changes for objects
    Should there be an actual item that's a subclass of the player, or should there just be a mesh that's a component of the hands or something?
    

Have items combine if near others of the same type
    Or don't
    Or maybe have it happen on collision?


I really want to make the inventory standalone...

Better hand model
    
Maybe make dying enemies ragdoll like in TES, and have player "activate" them to loot
Look up how to use unity in a more script-y manner rather than GUI-y
	Just do addcomponent rather than adding in editor
    

Maybe switch animations to ani.Play rather than using transitions

        